#/bin/bash

DOTFILES_DIR="${HOME}/repo/randy/dotfiles"
HOME_CONFIG_DIR="${HOME}/.config"
OH_MY_ZSH_CUSTOM_PLUGINS_DIR="${HOME}/.oh-my-zsh/custom/plugins"
OH_MY_ZSH_THEMES_DIR="${HOME}/.oh-my-zsh/themes"
ZSHRC_CONFIG="${HOME}/.zshrc"

# Install yay to install applications from the Arch User Repository (yay)
sudo pacman -Sy yay --needed --noconfirm

# Keep-alive: update existing sudo time stamp if set, otherwise do nothing.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

yay_uninstall() {
    yay -R $1 --noconfirm
}

yay_install() {
    yay -Sy $1 --needed --noconfirm
}

install_gvim() {
    yay_uninstall 'vim'
    yay_install 'gvim'
}

install_wine() {
    yay_uninstall 'wine'
    yay_install 'wine-staging'
}

install_dotfiles() {
    echo '>>>>>> Cloning repo dotfiles ...'

    if [ ! -d ${DOTFILES_DIR} ]
    then
        mkdir -p -- ~/repo
        git clone https://github.com/randy-concepcion/dotfiles.git ${DOTFILES_DIR}
        echo ">>>>> Repo 'dotfiles' cloned to ${DOTFILES_DIR} ..."
    else
        echo ">>>>> Repo 'dotfiles' already cloned to ${DOTFILES_DIR}"
    fi
}

install_terminator() {
    yay_install 'terminator'

    echo ">>>>> Linking terminator config: ${HOME_CONFIG_DIR}/terminator/config ..."
    ln -sf "${DOTFILES_DIR}/terminatorconfig" "${HOME_CONFIG_DIR}/terminator/config"

    echo ">>>>> Copying gtk3.0 css config (for ugly terminator tabs): ${HOME_CONFIG_DIR}/gtk-3.0/gtk.css ..."
    cp "${DOTFILES_DIR}/gtk.css" "${HOME_CONFIG_DIR}/gtk-3.0/gtk.css"
}

zsh_enable_plugin() {
    # If there is no plugins statement, create it
    # Otherwise, we'll just append the plugin to list
    if ! grep -q "^plugins=(" ${ZSHRC_CONFIG}
    then
        echo "" >> ${ZSHRC_CONFIG}
        echo "# Enabled zsh plugins" >> ${ZSHRC_CONFIG}
        echo "plugins=()" >> ${ZSHRC_CONFIG}

    else
        echo ">>>>> zsh plugins found in ${ZSHRC_CONFIG}"
    fi

    if ! grep -q "^plugins=(.*$1.*)$" ${ZSHRC_CONFIG}
    then
        sed -i "s/^plugins=(/&$1 /" ${ZSHRC_CONFIG}

    else
        echo "Plugin already found in ${ZSHRC_CONFIG}: $1"
    fi
}

install_customized_zsh() {
    yay_install 'zsh'

    if [ ! -d "${HOME}/.oh-my-zsh" ]
    then
        echo ">>>>> Installing oh-my-zsh ..."
        sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
    else
        echo
        echo 'You already have Oh My Zsh installed.'
        echo "You'll need to remove '${HOME}/.oh-my-zsh' if you want to reinstall."
        echo
    fi

    if [ ! -d "${OH_MY_ZSH_CUSTOM_PLUGINS_DIR}/zsh-syntax-highlighting" ]
    then
        echo ">>>>> Installing zsh-syntax-highlighting ..."
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
    else
        echo '>>>>> Plugin zsh-syntax-highlighting already exists'
    fi


    if [ ! -d "${OH_MY_ZSH_CUSTOM_PLUGINS_DIR}/zsh-autosuggestions" ]
    then
        echo ">>>>> Installing zsh-autosuggestions ..."
        git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

    else
        echo '>>>>> Plugin zsh-autosuggestions already exists'
    fi

    # Enable zsh plugins in ~/.zshrc
    zsh_enable_plugin 'zsh-syntax-highlighting'
    zsh_enable_plugin 'zsh-autosuggestions'
}

# ----- Basic Applications ----- #
yay_install 'audacity'
yay_install 'code'
yay_install 'flameshot'
yay_install 'gimp'
yay_install 'git'
yay_install 'google-chrome'
yay_install 'slack-desktop'
yay_install 'spotify'
yay_install 'telegram-desktop'
yay_install 'transmission-qt'
yay_install 'trello'
yay_install 'viber'
yay_install 'zoom'

# ----- Tools ----- #
install_gvim
yay_install 'the_silver_searcher'
yay_install 'unzip'
yay_install 'xclip'

# ----- Applications with Custom Configs ----- #
install_dotfiles
install_terminator
install_customized_zsh
